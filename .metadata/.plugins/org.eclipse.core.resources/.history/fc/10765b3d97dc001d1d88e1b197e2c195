package operations;

import java.util.*;

public class DuplicateElemtsRemove {
public static void duplicacy(String str)
{
	//using indexOf()
	int n=str.length();
	String res=new String();
	for(int i=0;i<n;i++)
	{
		char c=str.charAt(i);
		if(res.indexOf(c)<0)
		{
			res+=c;
		}
	}
	System.out.println(res);
}
public static void setApproach(String str)
{String res="";
	char[] ch=str.toCharArray();
	Set<Character>sets=new LinkedHashSet<>();
	for(Character c:ch)
	{
		sets.add(c);
	}
	//converting set to string
for(Character c:sets)
{
	res+=c;
}

	System.out.println(res);
}
public static void mapApproach(String str ) {
	Map<Character,Integer>maps=new LinkedHashMap<Character, Integer>();
	char ch[]=str.toCharArray();
	
	for(Character c:ch)
	{
		if(!maps.containsKey(ch))
		{
//			maps.put(c, maps.get(ch)+1);
			maps.put(c, 1);
		}
//		else
			maps.put(c, 1);
	}
	 // Finding the Set of keys from
    // the HashMap
	 Set<Character> keySet = maps.keySet();
	 

     // Creating an ArrayList of keys
     // by passing the keySet
     ArrayList<Character> listOfKeys
         = new ArrayList<>(keySet);
     String res="";
     for(Character i:listOfKeys) {
    	 res=res+i;
     }
     System.out.println(res);
}
	public static void main(String[] args) {
		String str="programming";
		StringBuilder sb =new StringBuilder();
		str.chars().distinct().forEach(c -> sb.append((char)c));
		//convertng String Builder to String
		String s=sb.toString();
		System.out.println(s);
		//or Syso(sb);==> we can also directly pring sb
		//str.chars().distinct().foreach(c=> sb.apend((char)c))
		duplicacy( str);
		setApproach( str);
		mapApproach( str );
	}

}
